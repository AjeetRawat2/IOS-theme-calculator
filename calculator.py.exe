import tkinter as tk
from tkinter import ttk
import math

class Calculator:
    def __init__(self, root):
        self.root = root
        self.root.title("Calculator")
        self.root.configure(bg='#000000')
        
        # Variables
        self.current = ''
        self.expression = ''
        self.display_var = tk.StringVar(value='0')
        
        # Styles
        style = ttk.Style()
        style.configure('Calc.TButton', 
                       font=('Helvetica', 20, 'bold'),
                       padding=10,
                       width=4)
        
        # Display
        display = ttk.Label(
            root,
            textvariable=self.display_var,
            font=('Helvetica', 40, 'bold'),
            anchor='e',
            padding=(20, 20),
            background='#000000',
            foreground='#FFFFFF'
        )
        display.grid(row=0, column=0, columnspan=4, sticky='nsew')
        
        # Buttons configuration
        buttons = [
            ('C', 1, 0, '#A5A5A5'), ('±', 1, 1, '#A5A5A5'), ('%', 1, 2, '#A5A5A5'), ('÷', 1, 3, '#FF9500'),
            ('7', 2, 0, '#333333'), ('8', 2, 1, '#333333'), ('9', 2, 2, '#333333'), ('×', 2, 3, '#FF9500'),
            ('4', 3, 0, '#333333'), ('5', 3, 1, '#333333'), ('6', 3, 2, '#333333'), ('-', 3, 3, '#FF9500'),
            ('1', 4, 0, '#333333'), ('2', 4, 1, '#333333'), ('3', 4, 2, '#333333'), ('+', 4, 3, '#FF9500'),
            ('0', 5, 0, '#333333', 2), ('.', 5, 2, '#333333'), ('=', 5, 3, '#FF9500')
        ]
        
        # Create and place buttons
        for button in buttons:
            if len(button) == 5:  # Special case for zero button
                text, row, col, color, colspan = button
                btn = tk.Button(
                    root,
                    text=text,
                    font=('Helvetica', 20, 'bold'),
                    bg=color,
                    fg='white',
                    relief='flat',
                    command=lambda x=text: self.button_click(x)
                )
                btn.grid(row=row, column=col, columnspan=colspan, sticky='nsew', padx=1, pady=1)
            else:
                text, row, col, color = button
                btn = tk.Button(
                    root,
                    text=text,
                    font=('Helvetica', 20, 'bold'),
                    bg=color,
                    fg='white',
                    relief='flat',
                    command=lambda x=text: self.button_click(x)
                )
                btn.grid(row=row, column=col, sticky='nsew', padx=1, pady=1)
        
        # Configure grid
        for i in range(6):
            root.grid_rowconfigure(i, weight=1)
        for i in range(4):
            root.grid_columnconfigure(i, weight=1)
            
    def button_click(self, value):
        if value == 'C':
            self.current = ''
            self.expression = ''
            self.display_var.set('0')
        elif value == '=':
            try:
                # Replace operators with Python operators
                expr = self.expression.replace('×', '*').replace('÷', '/')
                result = eval(expr)
                # Format result
                if result == int(result):
                    result = int(result)
                self.display_var.set(result)
                self.current = str(result)
                self.expression = str(result)
            except:
                self.display_var.set('Error')
                self.current = ''
                self.expression = ''
        elif value == '±':
            if self.current and self.current != '0':
                if self.current[0] == '-':
                    self.current = self.current[1:]
                else:
                    self.current = '-' + self.current
                self.expression = self.current
                self.display_var.set(self.current)
        elif value == '%':
            if self.current:
                try:
                    result = float(self.current) / 100
                    self.current = str(result)
                    self.expression = str(result)
                    self.display_var.set(result)
                except:
                    self.display_var.set('Error')
        else:
            if value in '÷×+-':
                self.current = ''
            else:
                self.current += value
            self.expression += value
            self.display_var.set(self.current if self.current else self.expression)

if __name__ == '__main__':
    root = tk.Tk()
    root.geometry('400x600')
    app = Calculator(root)
    root.mainloop()